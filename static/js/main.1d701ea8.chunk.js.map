{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","useReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d701ea8.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n//Selectors\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import React from 'react';\r\nimport './HeaderOption.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"./features/userSlice\";\r\n\r\n\r\nfunction HeaderOption({ avatar, Icon, title, onClick}) {\r\n    const  user = useSelector(selectUser);\r\n\r\n    return (\r\n        <div\r\n            onClick={onClick}\r\n            className=\"headerOption\"\r\n        >\r\n            {Icon && <Icon className=\"headerOption__icon\" />}\r\n            {avatar && <Avatar\r\n                className='headerOption__icon'\r\n                src={user?.photoUrl}\r\n            >\r\n                {user?.email[0]}\r\n            </Avatar>}\r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderOption;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAyts1e1EIktDtDpLGvsHaWZoPfnsXbNXc\",\r\n    authDomain: \"linkedin-clone-2176f.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-2176f\",\r\n    storageBucket: \"linkedin-clone-2176f.appspot.com\",\r\n    messagingSenderId: \"350833609465\",\r\n    appId: \"1:350833609465:web:0872f1718e181c45b8f028\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport {db, auth};","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from \"./HeaderOption\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {auth} from \"./firebase\";\r\nimport {logout} from \"./features/userSlice\";\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <img\r\n                    src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\r\n                    alt=\"linkedInLogo\"/>\r\n\r\n                <div className=\"header__search\">\r\n                    <SearchIcon/>\r\n                    <input\r\n                        placeholder=\"Search\"\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <HeaderOption\r\n                    Icon={HomeIcon}\r\n                    title='Home'\r\n                />\r\n                <HeaderOption\r\n                    Icon={SupervisorAccountIcon}\r\n                    title='My Network'\r\n                />\r\n                <HeaderOption\r\n                    Icon={BusinessCenterIcon}\r\n                    title='Jobs'\r\n                />\r\n                <HeaderOption\r\n                    Icon={ChatIcon}\r\n                    title='Messaging'\r\n                />\r\n                <HeaderOption\r\n                    Icon={NotificationsIcon}\r\n                    title='Notifications'\r\n                />\r\n                <HeaderOption\r\n                    avatar={true}\r\n                    title=\"me\"\r\n                    onClick={logoutOfApp}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport './Sidebar.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {selectUser} from \"./features/userSlice\";\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img\r\n                    src=\"https://images.unsplash.com/photo-1621123128994-d2ddff6ac7d2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\"\r\n                    alt=\"imageMy\"/>\r\n                <Avatar\r\n                    src={user.photoUrl}\r\n                    className=\"sidebar__avatar\"\r\n                >\r\n                    {user.email[0]}\r\n                </Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar__statNumber\">89</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\">98</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('programming')}\r\n                {recentItem('softwareengineering')}\r\n                {recentItem('design')}\r\n                {recentItem('developer')}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport './InputOption.css';\r\n\r\nfunction InputOption({title,  Icon, color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color: color}}/>\r\n            <h1>{title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputOption;","import React, {forwardRef} from 'react';\r\nimport './Post.css';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport InputOption from \"./InputOption\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\n\r\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption\r\n                    Icon={ThumbUpAltOutlinedIcon}\r\n                    title=\"Like\"\r\n                    color=\"gray\"\r\n                />\r\n                <InputOption\r\n                    Icon={ChatOutlinedIcon}\r\n                    title=\"Comment\"\r\n                    color=\"gray\"\r\n                />\r\n                <InputOption\r\n                    Icon={ShareOutlinedIcon}\r\n                    title=\"Share\"\r\n                    color=\"gray\"\r\n                />\r\n                <InputOption\r\n                    Icon={SendOutlinedIcon}\r\n                    title=\"Send\"\r\n                    color=\"gray\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;","import React, {useEffect, useState} from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InputOption from \"./InputOption\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport Post from './Post';\r\nimport {db} from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectUser} from \"./features/userSlice\";\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const [input, setInput] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot((snapshot) =>\r\n                setPosts(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            );\r\n    }, []);\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl || \"\",\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            onClick={sendPost}\r\n                        >\r\n                            Sent\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption\r\n                        Icon={ImageIcon}\r\n                        title=\"Photo\"\r\n                        color=\"#70b5f9\"\r\n                    />\r\n                    <InputOption\r\n                        Icon={SubscriptionsIcon}\r\n                        title=\"video\"\r\n                        color=\"#e7a33e\"\r\n                    />\r\n                    <InputOption\r\n                        Icon={EventNoteIcon}\r\n                        title=\"Event\"\r\n                        color=\"#c0cbcd\"\r\n                    />\r\n                    <InputOption\r\n                        Icon={CalendarViewDayIcon}\r\n                        title=\"Write article\"\r\n                        color=\"#7fc15e\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <FlipMove>\r\n                {posts.map(({id, data: {name, description, message, photoUrl}}) => (\r\n                    <Post\r\n                        key={id}\r\n                        name={name}\r\n                        description={description}\r\n                        message={message}\r\n                        photoUrl={photoUrl}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React, {useState} from 'react';\r\nimport './Login.css';\r\nimport {auth} from \"./firebase\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from './features/userSlice';\r\n\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(userAuth => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    profileUrl: userAuth.user.photoURL,\r\n                }));\r\n            }).catch(error => alert(error));\r\n    };\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert(\"Please enter a full name!\");\r\n        }\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                userAuth.user\r\n                    .updateProfile({\r\n                        displayName: name,\r\n                        photoURL: profilePic,\r\n                    })\r\n                    .then(() => {\r\n                        dispatch(\r\n                            login({\r\n                            email: userAuth.user.email,\r\n                            uid: userAuth.user.uid,\r\n                            displayName: name,\r\n                            photoUrl: profilePic,\r\n                        }));\r\n                    });\r\n            }).catch(error => alert(error));\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <img\r\n                src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png?itok=q_lR0Vks\"\r\n                alt=\"logo\"\r\n            />\r\n\r\n            <form>\r\n                <input\r\n                    name='name'\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    placeholder='Full name (required if registering)'\r\n                    type=\"text\"\r\n                />\r\n\r\n                <input\r\n                    value={profilePic}\r\n                    onChange={e => setProfilePic(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder='Profile pic URL (optional'\r\n                />\r\n\r\n                <input\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    placeholder='Email'\r\n                />\r\n\r\n                <input\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder='Password'\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    onClick={loginToApp}\r\n                >\r\n                    Sing In\r\n                </button>\r\n            </form>\r\n\r\n            <p>Not a member?{\" \"}\r\n                <span\r\n                    className=\"login__register\"\r\n                    onClick={register}\r\n                >\r\n                    Register Now\r\n                </span>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './Widgets.css';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nfunction Widgets() {\r\n    const newArticle = (heading, subtitle) => (\r\n        <div className=\"widgets__article\">\r\n            <div className=\"widgets__articleLeft\">\r\n                <FiberManualRecordIcon/>\r\n            </div>\r\n\r\n            <div className=\"widgets_articleRight\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon/>\r\n            </div>\r\n\r\n            {newArticle(\"React learning is COOL!\",  'Top news -5004 readers')}\r\n            {newArticle(\"Coronavirus: Ukraine updates\",  'Top news -506 readers')}\r\n            {newArticle(\"Tesla hits new highs\",  'Cars & auto -1022 readers')}\r\n            {newArticle(\"Is Redux too good?\",  'Code -400 readers')}\r\n            {newArticle(\"How  we lean a new staff\",  'Practical Logic -56 readers')}\r\n            {newArticle(\"BOOM! When it  will happends?\",  'Funny Stories -9988 readers')}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport './App.css';\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport {login, logout, selectUser} from \"./features/userSlice\";\r\nimport Login from \"./Login\";\r\nimport {auth} from \"./firebase\";\r\nimport Widgets from \"./Widgets\";\r\n\r\nfunction App() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(userAuth => {\r\n            if (userAuth) {\r\n                // user is logged in\r\n                dispatch(login({\r\n                    email: userAuth.email,\r\n                    uid: userAuth.uid,\r\n                    displayName: userAuth.displayName,\r\n                    photoUrl: userAuth.photoURL,\r\n                }))\r\n            } else {\r\n                // user is logged  out\r\n                dispatch(logout());\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Header/>\r\n\r\n            {!user ? (\r\n                <Login/>\r\n            ) : (\r\n                <div className=\"app__body\">\r\n                    <Sidebar/>\r\n                    <Feed/>\r\n                    <Widgets/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport useReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: useReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}